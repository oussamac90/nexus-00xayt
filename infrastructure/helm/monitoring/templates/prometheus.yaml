{{/* Prometheus Server Deployment Template */}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prometheus.fullname" . }}
  labels:
    {{- include "prometheus.labels" . | nindent 4 }}
    security.nexus.io/monitored: "true"
    monitoring.nexus.io/scrape: "true"
spec:
  replicas: {{ .Values.prometheus.server.replicaCount | default 2 }}
  selector:
    matchLabels:
      {{- include "prometheus.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "prometheus.labels" . | nindent 8 }}
        security.nexus.io/monitored: "true"
    spec:
      serviceAccountName: {{ include "prometheus.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.prometheus.server.securityContext | nindent 8 }}
      containers:
        - name: prometheus
          image: "{{ .Values.global.imageRegistry }}/prometheus/prometheus:v2.42.0"
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          args:
            - --storage.tsdb.retention.time={{ .Values.prometheus.server.retention | default "30d" }}
            - --storage.tsdb.path=/prometheus
            - --config.file=/etc/prometheus/prometheus.yml
            - --web.enable-lifecycle
            - --web.enable-admin-api
            - --web.console.libraries=/usr/share/prometheus/console_libraries
            - --web.console.templates=/usr/share/prometheus/consoles
          ports:
            - containerPort: 9090
              name: http
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
            initialDelaySeconds: 30
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
            initialDelaySeconds: 30
            periodSeconds: 15
          resources:
            {{- toYaml .Values.prometheus.server.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus
            - name: storage
              mountPath: /prometheus
      volumes:
        - name: config
          configMap:
            name: {{ include "prometheus.fullname" . }}-config
        - name: storage
          persistentVolumeClaim:
            claimName: {{ include "prometheus.fullname" . }}-storage

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "prometheus.fullname" . }}-config
  labels:
    {{- include "prometheus.labels" . | nindent 4 }}
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: {{ .Values.global.clusterName | default "nexus-production" }}
        environment: {{ .Values.global.environment | default "production" }}

    scrape_configs:
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)

      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__

      - job_name: 'nexus-security-metrics'
        metrics_path: '/metrics/security'
        kubernetes_sd_configs:
          - role: service
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_label_security_nexus_io_monitored]
            action: keep
            regex: true

    alerting:
      alertmanagers:
        - kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels: [__meta_kubernetes_namespace]
              regex: {{ .Release.Namespace }}
              action: keep
            - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
              regex: alertmanager
              action: keep
            - source_labels: [__meta_kubernetes_pod_container_port_number]
              regex: "9093"
              action: keep

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "prometheus.fullname" . }}-storage
  labels:
    {{- include "prometheus.labels" . | nindent 4 }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.global.storageClass | default "standard" }}
  resources:
    requests:
      storage: {{ .Values.prometheus.server.persistentVolume.size }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "prometheus.fullname" . }}
  labels:
    {{- include "prometheus.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "prometheus.selectorLabels" . | nindent 4 }}

---
{{- if .Values.prometheus.networkPolicy.enabled }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "prometheus.fullname" . }}
  labels:
    {{- include "prometheus.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      {{- include "prometheus.selectorLabels" . | nindent 6 }}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/part-of: monitoring
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
      ports:
        - protocol: TCP
          port: 9090
  egress:
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 9090
        - protocol: TCP
          port: 9093
{{- end }}

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "prometheus.fullname" . }}
  labels:
    {{- include "prometheus.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "prometheus.selectorLabels" . | nindent 6 }}
  endpoints:
    - port: http
      interval: 15s
      path: /metrics
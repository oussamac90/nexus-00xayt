# Kubernetes Ingress Configuration v1.27+
# Purpose: External access and TLS termination for Nexus Platform web UI
# Provides secure routing, load balancing and performance optimization for production frontend

apiVersion: networking.k8s.io/v1
kind: Ingress

metadata:
  name: nexus-web-ingress
  namespace: nexus
  annotations:
    # Ingress Controller Configuration
    kubernetes.io/ingress.class: "nginx"
    
    # SSL/TLS Configuration
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # CORS Configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    
    # Performance Optimization
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "5"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-next-upstream: "error timeout http_502"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      gzip on;
      gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
      
    # Monitoring
    prometheus.io/scrape: "true"
    prometheus.io/port: "10254"

spec:
  # TLS Configuration
  tls:
    - hosts:
        - nexus-platform.com
      secretName: nexus-web-tls-cert
  
  # Routing Rules
  rules:
    - host: nexus-platform.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nexus-web
                port:
                  number: 80